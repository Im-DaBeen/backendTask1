[2025 백엔드 고급 구현시험]

✅ 기본 제출 요건
- 프로젝트명: b학번 형식 (예: b201514099)
- 제출파일명: b학번.zip
- 에러 발생 시 큰 감점 → 실행 가능한 상태로 제출 (에러 발생 코드 주석 또는 제거)
- 모든 코드에 주석 필수 (주석 없으면 감점)
- 코드 스타일 가이드 준수 (PEP 8 for Python)

📌 시스템 아키텍처 요구사항 (20점)
- Microservice 아키텍처 구현
  - Auth Service (인증)
  - Book Service (도서 관리)
  - Review Service (리뷰 관리)
  - 각 서비스는 독립적인 데이터베이스 사용
- 서비스 간 통신은 gRPC 사용
- API Gateway 구현 (Kong 또는 Traefik)
- 모든 서비스는 Docker 컨테이너로 실행
- Kubernetes 클러스터에서 서비스 배포

📌 Auth Service (15점)
- JWT 기반 인증 구현
- OAuth 2.0 연동 (Google, GitHub)
- Role-based Access Control (RBAC)
  - Admin, Publisher, User 권한 구분
- 2단계 인증 (2FA) 구현
- 세션 관리 및 자동 로그아웃
- 비밀번호 정책 (최소 12자, 특수문자 필수)

📌 Book Service (20점)
- 도서 CRUD API 구현
- Elasticsearch를 이용한 도서 검색
- Redis를 이용한 캐싱
- 도서 대출/반납 시스템
- 도서 예약 시스템
- 실시간 재고 관리
- 도서 분류 시스템 (Dewey Decimal)
- ISBN 검증 및 자동 입력

📌 Review Service (15점)
- 도서 리뷰 CRUD
- 리뷰 평점 시스템
- 리뷰 신고 시스템
- 리뷰 필터링 (스팸, 욕설 등)
- 리뷰 추천 시스템
- 리뷰 통계 및 분석

📌 모니터링 및 로깅 (10점)
- Prometheus + Grafana를 이용한 모니터링
- ELK Stack을 이용한 로그 관리
- 에러 추적 및 알림 시스템
- 성능 메트릭 수집
- 사용자 행동 분석

📌 테스트 요구사항 (10점)
- Unit Test (각 서비스별 80% 이상 커버리지)
- Integration Test
- E2E Test
- Performance Test
- Security Test

📌 보안 요구사항 (10점)
- 모든 API는 HTTPS 사용
- SQL Injection 방지
- XSS 방지
- CSRF 토큰 구현
- Rate Limiting 구현
- 데이터 암호화 (PII)
- 보안 로그 기록

📌 추가 요구사항
1. 모든 서비스는 Circuit Breaker 패턴 구현
2. 서비스 디스커버리 (Consul 또는 Eureka)
3. 메시지 큐 (RabbitMQ 또는 Kafka)를 이용한 비동기 처리
4. CI/CD 파이프라인 구현 (Jenkins 또는 GitHub Actions)
5. Blue-Green 배포 전략 구현
6. 모든 설정은 환경변수로 관리
7. API 문서화 (Swagger/OpenAPI)
8. 국제화 (i18n) 지원
9. 다국어 지원 (한국어, 영어, 일본어)
10. 접근성 (WCAG 2.1) 준수

📌 제출물
1. 소스 코드
2. Dockerfile 및 docker-compose.yml
3. Kubernetes 매니페스트 파일
4. 테스트 결과 리포트
5. API 문서
6. 아키텍처 다이어그램
7. 배포 가이드
8. 보안 가이드
9. 성능 테스트 리포트
10. 문제 해결 과정 문서

📌 평가 기준
- 기능 구현 완성도: 40%
- 코드 품질 및 구조: 20%
- 테스트 커버리지: 15%
- 문서화: 15%
- 성능 및 보안: 10%

📌 주의사항
- 모든 서비스는 독립적으로 실행 가능해야 함
- 각 서비스의 데이터베이스 스키마는 별도로 제출
- 모든 API는 버전 관리 (v1, v2 등)
- 코드는 반드시 Git으로 관리
- 커밋 메시지는 영어로 작성
- 모든 에러는 적절히 처리되어야 함
- 타임아웃 및 재시도 로직 구현
- 모든 비밀 정보는 환경변수로 관리
- 로그는 구조화된 형식으로 출력
- 모든 API 응답은 표준화된 형식 사용

📌 제한사항
- 외부 라이브러리 사용 제한 (교수님 승인 필요)
- 클라우드 서비스 사용 금지 (로컬에서만 실행)
- 코드 복사/붙여넣기 금지
- AI 도구 사용 금지
- 타인과의 협업 금지

📌 시험 시간
- 총 48시간
- 중간 휴식 시간 포함
- 제출 마감 시간 엄수

📌 감점 사항
- 지연 제출: 1시간당 5점
- 컴파일 에러: 10점
- 런타임 에러: 15점
- 보안 취약점: 20점
- 테스트 실패: 10점
- 문서 누락: 5점/항목
- 코드 스타일 위반: 2점/항목
- 주석 누락: 1점/항목

📌 보너스 점수 (최대 10점)
- 추가 기능 구현
- 성능 최적화
- 보안 강화
- 사용자 경험 개선
- 혁신적인 솔루션

"이 시험은 단순한 코딩 테스트를 넘어, 현대적인 소프트웨어 개발의 모든 측면을 평가합니다. 
좋은 개발자는 단순히 코드를 작성하는 것이 아니라, 전체 시스템을 이해하고 설계할 수 있어야 합니다." 