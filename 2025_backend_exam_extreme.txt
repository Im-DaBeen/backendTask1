[2025 백엔드 초극악 구현시험 - 고급 금융 시스템 구축]

✅ 기본 제출 요건
- 프로젝트명: b학번 형식 (예: b201514099)
- 제출파일명: b학번.zip
- 모든 코드는 함수형 프로그래밍 패러다임으로 작성
- 모든 비즈니스 로직은 TDD로 구현
- 모든 코드는 100% 테스트 커버리지 달성
- 모든 코드는 실시간으로 정적 분석 도구로 검사
- 모든 커밋은 CI/CD 파이프라인 통과 필수

📌 시스템 아키텍처 요구사항 (25점)
- Event-Driven Microservice 아키텍처
  - Transaction Service (거래 처리)
  - Risk Management Service (리스크 관리)
  - Compliance Service (규제 준수)
  - Reporting Service (보고서 생성)
  - Notification Service (알림)
  - Analytics Service (분석)
  - 각 서비스는 독립적인 데이터베이스 (CQRS 패턴 적용)
- 서비스 간 통신
  - Event Sourcing 패턴 구현
  - CQRS 패턴 구현
  - Saga 패턴 구현
  - 서비스 간 통신은 gRPC + WebSocket
- 모든 서비스는 Serverless Architecture로 구현
- 모든 서비스는 Multi-Region 배포
- 모든 서비스는 Active-Active 구성
- 모든 서비스는 Zero-Downtime 배포 지원

📌 Transaction Service (20점)
- 실시간 거래 처리 시스템
  - 초당 100,000건 이상의 거래 처리
  - 99.999% 가용성 보장
  - 10ms 이내 응답 시간
- 복잡한 금융 상품 지원
  - 주식, 채권, 파생상품
  - 암호화폐
  - 외환
  - 선물/옵션
- 실시간 가격 조회 및 거래
- 자동 주문 실행 시스템
- 주문 유형 지원
  - 시장가 주문
  - 지정가 주문
  - 조건부 주문
  - 알고리즘 트레이딩
- 거래 비용 계산
- 세금 계산 및 보고

📌 Risk Management Service (15점)
- 실시간 리스크 모니터링
  - VaR (Value at Risk) 계산
  - 스트레스 테스트
  - 시나리오 분석
- 포지션 리밋 관리
- 마진 요구사항 계산
- 신용 리스크 평가
- 시장 리스크 분석
- 운영 리스크 관리
- 리스크 보고서 생성

📌 Compliance Service (15점)
- 실시간 규제 준수 모니터링
  - KYC/AML 검사
  - 거래 감시
  - 내부자 거래 감지
  - 시장 조작 감지
- 규제 보고서 자동 생성
  - MiFID II
  - Dodd-Frank
  - Basel III
  - FATCA
- 감사 로그 관리
- 규제 변경 사항 추적

📌 성능 및 확장성 (10점)
- 초당 1백만 건 이상의 이벤트 처리
- 10ms 이내의 응답 시간
- 99.999% 가용성
- 자동 스케일링
- 지연 시간 최적화
- 리소스 사용 최적화
- 캐시 전략 구현
- 데이터 샤딩 구현

📌 보안 요구사항 (15점)
- FIPS 140-2 준수 암호화
- HSM 기반 키 관리
- 다중 요소 인증
- 실시간 보안 모니터링
- 침입 탐지 시스템
- 보안 정보 및 이벤트 관리
- 데이터 유출 방지
- 엔드투엔드 암호화
- 보안 감사 로그
- 취약점 스캔 및 패치 관리

📌 테스트 요구사항
- Unit Test (100% 커버리지)
- Integration Test
- E2E Test
- Performance Test
- Security Test
- Chaos Engineering Test
- Recovery Test
- Disaster Recovery Test
- Load Test
- Stress Test
- Soak Test
- Spike Test

📌 모니터링 및 로깅
- 실시간 모니터링
- 분산 트레이싱
- 로그 집계 및 분석
- 성능 메트릭 수집
- 비즈니스 메트릭 수집
- 사용자 행동 분석
- 시스템 상태 모니터링
- 용량 계획
- 비용 모니터링

📌 데이터 관리
- 데이터 웨어하우스 구축
- 실시간 데이터 파이프라인
- 데이터 품질 관리
- 데이터 거버넌스
- 데이터 마이그레이션 전략
- 데이터 백업 및 복구
- 데이터 보관 정책
- 데이터 암호화
- 데이터 마스킹

📌 추가 요구사항
1. 모든 서비스는 Circuit Breaker 패턴 구현
2. 서비스 디스커버리 구현
3. 메시지 큐를 이용한 비동기 처리
4. CI/CD 파이프라인 구현
5. Blue-Green 배포 전략
6. Canary 배포 전략
7. A/B 테스트 지원
8. 기능 플래그 관리
9. 설정 관리
10. 비밀 관리

📌 제출물
1. 소스 코드
2. 아키텍처 문서
3. API 문서
4. 테스트 결과
5. 성능 테스트 결과
6. 보안 평가 결과
7. 배포 가이드
8. 운영 가이드
9. 장애 대응 매뉴얼
10. 비즈니스 연속성 계획

📌 평가 기준
- 기능 구현 완성도: 30%
- 코드 품질 및 구조: 20%
- 테스트 커버리지: 20%
- 성능 및 확장성: 15%
- 보안: 15%

📌 주의사항
- 모든 서비스는 독립적으로 실행 가능
- 모든 API는 버전 관리
- 모든 코드는 Git으로 관리
- 모든 커밋은 영어로 작성
- 모든 에러는 적절히 처리
- 모든 설정은 환경변수로 관리
- 모든 로그는 구조화된 형식
- 모든 API 응답은 표준화된 형식

📌 제한사항
- 외부 라이브러리 사용 제한
- 클라우드 서비스 사용 금지
- 코드 복사/붙여넣기 금지
- AI 도구 사용 금지
- 타인과의 협업 금지
- 디버깅 도구 사용 제한
- IDE 자동완성 기능 사용 제한

📌 시험 시간
- 총 72시간
- 중간 휴식 시간 포함
- 제출 마감 시간 엄수

📌 감점 사항
- 지연 제출: 1시간당 10점
- 컴파일 에러: 20점
- 런타임 에러: 30점
- 보안 취약점: 40점
- 테스트 실패: 20점
- 문서 누락: 10점/항목
- 코드 스타일 위반: 5점/항목
- 주석 누락: 2점/항목
- 성능 요구사항 미달: 25점
- 가용성 요구사항 미달: 30점

📌 보너스 점수 (최대 15점)
- 추가 기능 구현
- 성능 최적화
- 보안 강화
- 사용자 경험 개선
- 혁신적인 솔루션
- 새로운 기술 적용
- 비용 최적화
- 운영 효율화

"이 시험은 현대적인 금융 시스템의 모든 복잡성을 구현해야 합니다.
단순한 코딩 능력이 아닌, 시스템 설계, 아키텍처, 보안, 성능, 확장성 등
모든 측면에서 뛰어난 능력을 보여야 합니다." 